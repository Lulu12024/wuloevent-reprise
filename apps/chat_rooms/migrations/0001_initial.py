# Generated by Django 5.1.7 on 2025-03-09 18:49

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('events', '0013_alter_ticket_expiry_date'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ChatRoom',
            fields=[
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name="Date d' ajout")),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('active', models.BooleanField(default=True, verbose_name="Désigne si l' instance est active")),
                ('title', models.CharField(help_text='Titre du salon de discussion', max_length=255, verbose_name='Titre')),
                ('type', models.CharField(choices=[('PRIMARY', 'PRIMARY'), ('SECONDARY', 'SECONDARY')], default='SECONDARY', help_text='Type du salon (principal ou secondaire)', max_length=20, verbose_name='Type')),
                ('visibility', models.CharField(choices=[('PUBLIC', 'PUBLIC'), ('PRIVATE', 'PRIVATE')], default='PUBLIC', help_text='Visibilité du salon (public ou privé)', max_length=20, verbose_name='Visibilité')),
                ('profile_image', models.ImageField(blank=True, help_text='Image de profil du salon', null=True, upload_to='chat_rooms/profile/', verbose_name='Image de profil')),
                ('cover_image', models.ImageField(blank=True, help_text='Image de couverture du salon', null=True, upload_to='chat_rooms/cover/', verbose_name='Image de couverture')),
                ('status', models.CharField(choices=[('ACTIVE', 'ACTIVE'), ('CLOSED', 'CLOSED')], default='ACTIVE', help_text='Statut du salon (actif ou fermé)', max_length=20, verbose_name='Statut')),
                ('tags', models.JSONField(blank=True, default=dict, help_text='Tags associés au salon en format JSON', verbose_name='Tags')),
                ('event', models.ForeignKey(help_text='Événement associé au salon', on_delete=django.db.models.deletion.DO_NOTHING, related_name='chat_rooms', to='events.event', verbose_name='Événement')),
            ],
            options={
                'verbose_name': 'Salon de discussion',
                'verbose_name_plural': 'Salons de discussion',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='ChatRoomAccessCriteria',
            fields=[
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name="Date d' ajout")),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('active', models.BooleanField(default=True, verbose_name="Désigne si l' instance est active")),
                ('name', models.CharField(help_text="Nom du critère d'accès", max_length=255, verbose_name='Nom')),
                ('description', models.TextField(blank=True, help_text="Description détaillée du critère d'accès", verbose_name='Description')),
                ('criteria_type', models.CharField(choices=[('ROLE', 'ROLE'), ('EVENT_TICKET', 'EVENT_TICKET')], help_text="Type de critère d'accès", max_length=50, verbose_name='Type de critère')),
                ('criteria_rules', models.JSONField(help_text="Règles définissant le critère d'accès en format JSON", verbose_name='Règles du critère')),
                ('is_active', models.BooleanField(default=True, help_text='Indique si ce critère est actuellement actif', verbose_name='Actif')),
                ('chat_room', models.ForeignKey(help_text='Salon de discussion concerné', on_delete=django.db.models.deletion.DO_NOTHING, related_name='access_criteria', to='chat_rooms.chatroom', verbose_name='Salon de discussion')),
            ],
            options={
                'verbose_name': "Critère d'accès",
                'verbose_name_plural': "Critères d'accès",
                'ordering': ['chat_room', 'name'],
            },
        ),
        migrations.CreateModel(
            name='ChatRoomPreference',
            fields=[
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name="Date d' ajout")),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('active', models.BooleanField(default=True, verbose_name="Désigne si l' instance est active")),
                ('custom_name', models.CharField(blank=True, help_text='Nom personnalisé du salon pour cet utilisateur', max_length=255, null=True, verbose_name='Nom personnalisé')),
                ('is_muted', models.BooleanField(default=False, help_text='Indique si le salon est en sourdine pour cet utilisateur', verbose_name='Mise en sourdine')),
                ('notification_level', models.CharField(choices=[('ALL', 'ALL'), ('MENTIONS', 'MENTIONS'), ('NONE', 'NONE')], default='ALL', help_text='Niveau de notification pour ce salon', max_length=20, verbose_name='Niveau de notification')),
                ('last_read_at', models.DateTimeField(blank=True, help_text="Dernière fois que l'utilisateur a lu les messages du salon", null=True, verbose_name='Dernière lecture')),
                ('chat_room', models.ForeignKey(help_text='Salon de discussion concerné', on_delete=django.db.models.deletion.DO_NOTHING, related_name='user_preferences', to='chat_rooms.chatroom', verbose_name='Salon de discussion')),
                ('user', models.ForeignKey(help_text='Utilisateur concerné par les préférences', on_delete=django.db.models.deletion.DO_NOTHING, related_name='chat_room_preferences', to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur')),
            ],
            options={
                'verbose_name': 'Préférence de salon',
                'verbose_name_plural': 'Préférences de salon',
            },
        ),
        migrations.CreateModel(
            name='ChatRoomSubscription',
            fields=[
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name="Date d' ajout")),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('active', models.BooleanField(default=True, verbose_name="Désigne si l' instance est active")),
                ('username', models.CharField(blank=True, help_text="Nom d'utilisateur de l'utilisateur", max_length=255, null=True, verbose_name="Nom d'utilisateur")),
                ('joined_at', models.DateTimeField(auto_now_add=True, help_text="Date à laquelle l'utilisateur a rejoint le salon", null=True, verbose_name="Date d'abonnement")),
                ('role', models.CharField(choices=[('ADMIN', 'ADMIN'), ('USER', 'USER')], default='USER', help_text="Indique le rôle de l'utilisateur dans le salon", verbose_name='Role')),
                ('chat_room', models.ForeignKey(help_text='Salon de discussion concerné', on_delete=django.db.models.deletion.DO_NOTHING, related_name='subscriptions', to='chat_rooms.chatroom', verbose_name='Salon de discussion')),
                ('user', models.ForeignKey(help_text='Utilisateur abonné au salon', on_delete=django.db.models.deletion.DO_NOTHING, related_name='chat_room_subscriptions', to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur')),
            ],
            options={
                'verbose_name': 'Abonnement au salon',
                'verbose_name_plural': 'Abonnements aux salons',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.AddIndex(
            model_name='chatroom',
            index=models.Index(fields=['type'], name='chat_rooms__type_92bf5d_idx'),
        ),
        migrations.AddIndex(
            model_name='chatroom',
            index=models.Index(fields=['visibility'], name='chat_rooms__visibil_be4b74_idx'),
        ),
        migrations.AddIndex(
            model_name='chatroom',
            index=models.Index(fields=['status'], name='chat_rooms__status_006fcf_idx'),
        ),
        migrations.AddIndex(
            model_name='chatroom',
            index=models.Index(fields=['timestamp'], name='chat_rooms__timesta_f6a7d4_idx'),
        ),
        migrations.AddIndex(
            model_name='chatroom',
            index=models.Index(fields=['event'], name='chat_rooms__event_i_b6abc2_idx'),
        ),
        migrations.AddIndex(
            model_name='chatroomaccesscriteria',
            index=models.Index(fields=['chat_room'], name='chat_rooms__chat_ro_c54e03_idx'),
        ),
        migrations.AddIndex(
            model_name='chatroomaccesscriteria',
            index=models.Index(fields=['criteria_type'], name='chat_rooms__criteri_9a0ec9_idx'),
        ),
        migrations.AddIndex(
            model_name='chatroomaccesscriteria',
            index=models.Index(fields=['is_active'], name='chat_rooms__is_acti_e5dc51_idx'),
        ),
        migrations.AddIndex(
            model_name='chatroomaccesscriteria',
            index=models.Index(fields=['timestamp'], name='chat_rooms__timesta_5a2b90_idx'),
        ),
        migrations.AddIndex(
            model_name='chatroompreference',
            index=models.Index(fields=['user'], name='chat_rooms__user_id_e91a24_idx'),
        ),
        migrations.AddIndex(
            model_name='chatroompreference',
            index=models.Index(fields=['chat_room'], name='chat_rooms__chat_ro_92c172_idx'),
        ),
        migrations.AddIndex(
            model_name='chatroompreference',
            index=models.Index(fields=['notification_level'], name='chat_rooms__notific_98c091_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='chatroompreference',
            unique_together={('user', 'chat_room')},
        ),
        migrations.AddIndex(
            model_name='chatroomsubscription',
            index=models.Index(fields=['user'], name='chat_rooms__user_id_bf89bf_idx'),
        ),
        migrations.AddIndex(
            model_name='chatroomsubscription',
            index=models.Index(fields=['chat_room'], name='chat_rooms__chat_ro_54d391_idx'),
        ),
        migrations.AddIndex(
            model_name='chatroomsubscription',
            index=models.Index(fields=['timestamp'], name='chat_rooms__timesta_feaa8f_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='chatroomsubscription',
            unique_together={('user', 'chat_room')},
        ),
    ]
