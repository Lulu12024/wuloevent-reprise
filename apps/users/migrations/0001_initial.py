# Generated by Django 5.1.1 on 2024-09-12 18:25

import apps.users.managers
import apps.utils.utils.codes.utils
import apps.utils.validators
import django.contrib.gis.db.models.fields
import django.utils.timezone
import simple_history.models
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('first_name', models.CharField(max_length=30, verbose_name='Prénoms')),
                ('last_name', models.CharField(max_length=150, verbose_name='Nom')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Adresse mail')),
                ('sex', models.CharField(blank=True, choices=[('F', 'Féminin'), ('M', 'Masculin'), ('A', 'Autres')], max_length=10, verbose_name='Sexe')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='Date de Naissance')),
                ('phone', models.CharField(blank=True, max_length=25, null=True, validators=[apps.utils.validators.PhoneNumberValidator()], verbose_name='Numéro de téléphone')),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to=apps.utils.utils.codes.utils._upload_to, verbose_name='Image de profile')),
                ('admin_id', models.CharField(max_length=128, unique=True, verbose_name='Numéro de connection admin')),
                ('conf_num', models.CharField(max_length=128, verbose_name='Numéro de confirmation')),
                ('password', models.CharField(max_length=128, verbose_name='Mot de passe')),
                ('is_active', models.BooleanField(default=True, help_text='Désigne si cet utilisateur doit être traité comme actif. Désélectionnez cette option au lieu de supprimer les comptes. ', verbose_name="Désigne si l' utilisateur est actif")),
                ('have_validate_account', models.BooleanField(default=False, verbose_name="Désigne si l' utilisateur a validé son compte")),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name="Date d' inscription")),
                ('is_staff', models.BooleanField(default=False, verbose_name="Désigne si l' utilisateur est un admin système")),
                ('is_app_admin', models.BooleanField(default=False, verbose_name="Désigne si l' utilisateur est un admin Wulo Events")),
                ('phone_number_validated', models.BooleanField(default=False, verbose_name='Désigne si le numéro de téléphone est validé ')),
                ('deactivated_at', models.DateTimeField(blank=True, null=True, verbose_name='Désigne la date de désactivation du compte')),
            ],
            options={
                'verbose_name': 'Utilisateur',
                'verbose_name_plural': 'Utilisateurs',
            },
            managers=[
                ('objects', apps.users.managers.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AccountValidationRequest',
            fields=[
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name="Date d' ajout")),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('active', models.BooleanField(default=True, verbose_name="Désigne si l' instance est active")),
                ('code', models.CharField(db_index=True, max_length=64, unique=True, verbose_name='Code')),
                ('ip_address', models.GenericIPAddressField(blank=True, default='', null=True, verbose_name='Adresse IP de la session')),
                ('user_agent', models.CharField(blank=True, default='', max_length=256, verbose_name='HTTP User Agent')),
            ],
            options={
                'verbose_name': 'Requête de Validation de Compte',
                'verbose_name_plural': 'Requêtes de Validation de Compte',
            },
        ),
        migrations.CreateModel(
            name='AppPermission',
            fields=[
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name="Date d' ajout")),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('active', models.BooleanField(default=True, verbose_name="Désigne si l' instance est active")),
                ('name', models.CharField(max_length=255, verbose_name='Nom de la permission')),
                ('codename', models.CharField(db_index=True, max_length=100, unique=True, verbose_name='Nom de code')),
                ('entity', models.CharField(blank=True, max_length=100, null=True, verbose_name='Entité associée à la permission')),
                ('method', models.CharField(blank=True, max_length=100, null=True, verbose_name='Methode associée à la permission')),
            ],
            options={
                'verbose_name': "Permission de l' application",
                'verbose_name_plural': "Permissions de l' application",
            },
        ),
        migrations.CreateModel(
            name='AppRole',
            fields=[
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name="Date d' ajout")),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('active', models.BooleanField(default=True, verbose_name="Désigne si l' instance est active")),
                ('name', models.CharField(max_length=128, verbose_name='Nom du role')),
                ('label', models.CharField(choices=[('ADMIN', 'ADMIN'), ('STAFF', 'STAFF'), ('SUPPORT', 'SUPPORT'), ('ACCOUNTANT', 'ACCOUNTANT'), ('SUPER_ADMIN', 'SUPER_ADMIN'), ('EVENT_OWNER', 'EVENT_OWNER'), ('COLLABORATOR', 'COLLABORATOR'), ('SALES_MANAGER', 'SALES_MANAGER')], max_length=64, verbose_name='Label du role')),
            ],
            options={
                'verbose_name': "Role de l' application",
                'verbose_name_plural': "Roles de l' application",
            },
        ),
        migrations.CreateModel(
            name='HistoricalAppPermission',
            fields=[
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('timestamp', models.DateTimeField(blank=True, editable=False, verbose_name="Date d' ajout")),
                ('updated', models.DateTimeField(blank=True, editable=False, verbose_name='Date de modification')),
                ('active', models.BooleanField(default=True, verbose_name="Désigne si l' instance est active")),
                ('name', models.CharField(max_length=255, verbose_name='Nom de la permission')),
                ('codename', models.CharField(db_index=True, max_length=100, verbose_name='Nom de code')),
                ('entity', models.CharField(blank=True, max_length=100, null=True, verbose_name='Entité associée à la permission')),
                ('method', models.CharField(blank=True, max_length=100, null=True, verbose_name='Methode associée à la permission')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': "historical Permission de l' application",
                'verbose_name_plural': "historical Permissions de l' application",
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalAppRole',
            fields=[
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('timestamp', models.DateTimeField(blank=True, editable=False, verbose_name="Date d' ajout")),
                ('updated', models.DateTimeField(blank=True, editable=False, verbose_name='Date de modification')),
                ('active', models.BooleanField(default=True, verbose_name="Désigne si l' instance est active")),
                ('name', models.CharField(max_length=128, verbose_name='Nom du role')),
                ('label', models.CharField(choices=[('ADMIN', 'ADMIN'), ('STAFF', 'STAFF'), ('SUPPORT', 'SUPPORT'), ('ACCOUNTANT', 'ACCOUNTANT'), ('SUPER_ADMIN', 'SUPER_ADMIN'), ('EVENT_OWNER', 'EVENT_OWNER'), ('COLLABORATOR', 'COLLABORATOR'), ('SALES_MANAGER', 'SALES_MANAGER')], max_length=64, verbose_name='Label du role')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': "historical Role de l' application",
                'verbose_name_plural': "historical Roles de l' application",
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalTransaction',
            fields=[
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('timestamp', models.DateTimeField(blank=True, editable=False, verbose_name="Date d' ajout")),
                ('updated', models.DateTimeField(blank=True, editable=False, verbose_name='Date de modification')),
                ('active', models.BooleanField(default=True, verbose_name="Désigne si l' instance est active")),
                ('type', models.CharField(choices=[('WITHDRAW', 'WITHDRAW'), ('SUBSCRIPTION', 'SUBSCRIPTION'), ('EVENT_HIGHLIGHTING', 'EVENT_HIGHLIGHTING'), ('ORDER', 'ORDER')], max_length=220, verbose_name='Type de la transaction')),
                ('status', models.CharField(choices=[('PENDING', 'PENDING'), ('IN_PROGRESS', 'IN_PROGRESS'), ('PAID', 'PAID'), ('CANCELED', 'CANCELED'), ('FAILED', 'FAILED'), ('RESOLVED', 'RESOLVED')], default='PENDING', max_length=220, verbose_name='Statut de la transaction')),
                ('date', models.DateTimeField(blank=True, editable=False, verbose_name="Date d' inscription")),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('gateway_id', models.CharField(blank=True, max_length=255, verbose_name='Approbation du réseau (ID)')),
                ('gateway', models.CharField(choices=[('FEDAPAY', 'FEDAPAY'), ('PAYSTACK', 'PAYSTACK'), ('STRIPE', 'STRIPE')], default='FEDAPAY', max_length=255, null=True, verbose_name='Passerelle de paiement utilisé')),
                ('payment_method', models.CharField(choices=[('CASH', 'CASH'), ('MOMO', 'MOMO'), ('CARD', 'CARD')], default='MOMO', max_length=255, null=True, verbose_name='Méthode de paiement')),
                ('local_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Identifiant local')),
                ('amount', models.CharField(max_length=128, verbose_name='Montant')),
                ('entity_id', models.CharField(blank=True, max_length=255, null=True, verbose_name="Identifiant de l' entité")),
                ('payment_url', models.CharField(blank=True, max_length=255, null=True, verbose_name='Lien de paiement')),
                ('last_webhook_data', models.JSONField(default={}, verbose_name='Dernière données de mise à jour')),
                ('status_updated_at', models.DateTimeField(blank=True, null=True, verbose_name='Dernière mise à jour de status')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical Transaction',
                'verbose_name_plural': 'historical Transactions',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='PointOfInterest',
            fields=[
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name="Date d' ajout")),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('active', models.BooleanField(default=True, verbose_name="Désigne si l' instance est active")),
                ('location_lat', models.FloatField(default=0, verbose_name='Latitude du lieu')),
                ('location_long', models.FloatField(default=0, verbose_name='Longitude du lieu')),
                ('location', django.contrib.gis.db.models.fields.PointField(null=True, srid=4326, verbose_name='Coordonnées')),
                ('approximate_distance', models.FloatField(default=100000, verbose_name='Distance de verification en mètre')),
                ('allow_notifications', models.BooleanField(default=False, verbose_name='Notifications')),
            ],
            options={
                'verbose_name': "Point Géographique d'intérêt",
                'verbose_name_plural': "Point Géographique d'intérêt",
            },
        ),
        migrations.CreateModel(
            name='ResetPasswordRequest',
            fields=[
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name="Date d' ajout")),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('active', models.BooleanField(default=True, verbose_name="Désigne si l' instance est active")),
                ('code', models.CharField(db_index=True, max_length=64, unique=True, verbose_name='Code')),
                ('ip_address', models.GenericIPAddressField(blank=True, default='', null=True, verbose_name='Adresse IP de la session')),
                ('user_agent', models.CharField(blank=True, default='', max_length=256, verbose_name='HTTP User Agent')),
            ],
            options={
                'verbose_name': 'Requête de Modification de Mot de Passe',
                'verbose_name_plural': 'Requêtes de Modification de Mot de Passe',
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name="Date d' ajout")),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('active', models.BooleanField(default=True, verbose_name="Désigne si l' instance est active")),
                ('type', models.CharField(choices=[('WITHDRAW', 'WITHDRAW'), ('SUBSCRIPTION', 'SUBSCRIPTION'), ('EVENT_HIGHLIGHTING', 'EVENT_HIGHLIGHTING'), ('ORDER', 'ORDER')], max_length=220, verbose_name='Type de la transaction')),
                ('status', models.CharField(choices=[('PENDING', 'PENDING'), ('IN_PROGRESS', 'IN_PROGRESS'), ('PAID', 'PAID'), ('CANCELED', 'CANCELED'), ('FAILED', 'FAILED'), ('RESOLVED', 'RESOLVED')], default='PENDING', max_length=220, verbose_name='Statut de la transaction')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name="Date d' inscription")),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('gateway_id', models.CharField(blank=True, max_length=255, verbose_name='Approbation du réseau (ID)')),
                ('gateway', models.CharField(choices=[('FEDAPAY', 'FEDAPAY'), ('PAYSTACK', 'PAYSTACK'), ('STRIPE', 'STRIPE')], default='FEDAPAY', max_length=255, null=True, verbose_name='Passerelle de paiement utilisé')),
                ('payment_method', models.CharField(choices=[('CASH', 'CASH'), ('MOMO', 'MOMO'), ('CARD', 'CARD')], default='MOMO', max_length=255, null=True, verbose_name='Méthode de paiement')),
                ('local_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Identifiant local')),
                ('amount', models.CharField(max_length=128, verbose_name='Montant')),
                ('entity_id', models.CharField(blank=True, max_length=255, null=True, verbose_name="Identifiant de l' entité")),
                ('payment_url', models.CharField(blank=True, max_length=255, null=True, verbose_name='Lien de paiement')),
                ('last_webhook_data', models.JSONField(default={}, verbose_name='Dernière données de mise à jour')),
                ('status_updated_at', models.DateTimeField(blank=True, null=True, verbose_name='Dernière mise à jour de status')),
            ],
            options={
                'verbose_name': 'Transaction',
                'verbose_name_plural': 'Transactions',
            },
        ),
        migrations.CreateModel(
            name='ZoneOfInterest',
            fields=[
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name="Date d' ajout")),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('active', models.BooleanField(default=True, verbose_name="Désigne si l' instance est active")),
                ('geofence', django.contrib.gis.db.models.fields.PolygonField(null=True, srid=4326, verbose_name='Zone')),
                ('allow_notifications', models.BooleanField(default=True, verbose_name='Notifications')),
            ],
            options={
                'verbose_name': "Zone Géographique d'interet",
                'verbose_name_plural': "Zones Géographiques d'interet",
            },
        ),
    ]
