# Generated by Django 5.1.1 on 2024-09-12 18:25

import apps.utils.utils.codes.utils
import apps.utils.validators
import django.contrib.gis.db.models.fields
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='MobileDevice',
            fields=[
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name="Date d' ajout")),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('active', models.BooleanField(default=True, verbose_name="Désigne si l' instance est active")),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Name')),
                ('registration_id', models.TextField(blank=True, null=True, verbose_name="Token d' enregistrement")),
                ('type', models.CharField(blank=True, choices=[('ios', 'ios'), ('android', 'android'), ('web', 'web')], max_length=10, null=True)),
                ('current_location_lat', models.FloatField(blank=True, null=True, verbose_name='Latitude du lieu')),
                ('current_location_long', models.FloatField(blank=True, null=True, verbose_name='Longitude du lieu')),
                ('current_location', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326, verbose_name="Lieu de l' évènement")),
            ],
            options={
                'verbose_name': 'Appareil Mobile',
                'verbose_name_plural': 'Appareils Mobile',
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name="Date d' ajout")),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('active', models.BooleanField(default=True, verbose_name="Désigne si l' instance est active")),
                ('status', models.CharField(choices=[('FAILED', 'FAILED'), ('SUCCESS', 'SUCCESS')], default='SUCCESS', max_length=10, verbose_name='Statut')),
                ('email', models.EmailField(max_length=96, verbose_name='Email')),
                ('phone', models.CharField(blank=True, max_length=25, null=True, validators=[apps.utils.validators.PhoneNumberValidator()], verbose_name='Numéro de téléphone')),
                ('device_token', models.CharField(max_length=1024, verbose_name='Token du mobile')),
                ('title', models.CharField(max_length=256, verbose_name='Titre de la notification')),
                ('message', models.TextField(verbose_name='Message')),
                ('data', models.JSONField(default={}, verbose_name='Données')),
                ('extra_data', models.JSONField(verbose_name='Extra données')),
                ('channels', models.JSONField(blank=True, null=True, verbose_name='Canal')),
                ('icon', models.CharField(blank=True, max_length=1024, null=True, verbose_name='Icon')),
                ('image', models.ImageField(blank=True, max_length=1024, null=True, upload_to=apps.utils.utils.codes.utils._upload_to, verbose_name='Image')),
                ('unread', models.BooleanField(db_index=True, default=True, verbose_name="Désigne si la notification n'a ps été vu")),
                ('scheduled_to_delivery', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Notification',
                'verbose_name_plural': 'Notifications',
            },
        ),
        migrations.CreateModel(
            name='NotificationType',
            fields=[
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name="Date d' ajout")),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('active', models.BooleanField(default=True, verbose_name="Désigne si l' instance est active")),
                ('name', models.CharField(choices=[('WELCOME', 'WELCOME'), ('ORDER_RECEIPT', 'ORDER_RECEIPT'), ('EVENT_VALIDATED', 'EVENT_VALIDATED'), ('NEW_EVENT_CREATION', 'NEW_EVENT_CREATION'), ('ACCOUNT_VALIDATION_REQUEST', 'ACCOUNT_VALIDATION_REQUEST'), ('ACCOUNT_VALIDATION_SUCCESSFUL', 'ACCOUNT_VALIDATION_SUCCESSFUL'), ('WITHDRAW_REQUEST_SUCCESSFUL', 'WITHDRAW_REQUEST_SUCCESSFUL'), ('PASSWORD_RESET_REQUEST', 'PASSWORD_RESET_REQUEST'), ('FOLLOWED_EVENT_PUBLISHER', 'FOLLOWED_EVENT_PUBLISHER'), ('FAVOURITE_CATEGORY_EVENT', 'FAVOURITE_CATEGORY_EVENT'), ('PASSWORD_RESET_SUCCESSFUL', 'PASSWORD_RESET_SUCCESSFUL'), ('APPROACH_OF_FAVOURED_EVENT', 'APPROACH_OF_FAVOURED_EVENT'), ('NEARLY_SOLD_OUT_OF_TICKETS', 'NEARLY_SOLD_OUT_OF_TICKETS'), ('END_OF_TRANSACTION_PROCESSING', 'END_OF_TRANSACTION_PROCESSING'), ('EVENT_LOCATION_NEAR_BY_USER_POI', 'EVENT_LOCATION_NEAR_BY_USER_POI'), ('EVENT_NEAR_BY_USER_LAST_LOCATION', 'EVENT_NEAR_BY_USER_LAST_LOCATION'), ('END_OF_TICKETS_GENERATION_FOR_ORDER', 'END_OF_TICKETS_GENERATION_FOR_ORDER'), ('EVENT_LOCATION_INSIDE_ZONE_OF_INTEREST', 'EVENT_LOCATION_INSIDE_ZONE_OF_INTEREST'), ('NEW_EVENT_CREATION_IN_FAVORED_CATEGORY', 'NEW_EVENT_CREATION_IN_FAVORED_CATEGORY'), ('NEARLY_SOLD_OUT_OF_TICKETS_OF_FAVOURED_EVENT', 'NEARLY_SOLD_OUT_OF_TICKETS_OF_FAVOURED_EVENT'), ('EVENT_HIGHLIGHTING_SUCCESSFUL', 'EVENT_HIGHLIGHTING_SUCCESSFUL'), ('SUBSCRIPTION_SUCCESSFUL', 'SUBSCRIPTION_SUCCESSFUL')], max_length=128, verbose_name='Nom')),
                ('description', models.CharField(blank=True, editable=False, max_length=128, verbose_name='Description')),
            ],
            options={
                'verbose_name': 'Type de Notification',
                'verbose_name_plural': 'Types de Notification',
            },
        ),
        migrations.CreateModel(
            name='SubscriptionToNotificationType',
            fields=[
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name="Date d' ajout")),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('active', models.BooleanField(default=True, verbose_name="Désigne si l' instance est active")),
            ],
            options={
                'verbose_name': 'Abonnement à un type de Notifications',
                'verbose_name_plural': 'Abonnements à un type Notifications',
            },
        ),
    ]
