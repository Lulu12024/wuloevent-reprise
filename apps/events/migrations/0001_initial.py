# Generated by Django 5.1.1 on 2024-09-12 18:25

import apps.utils.utils.codes.utils
import apps.utils.validators
import datetime
import django.contrib.gis.db.models.fields
import simple_history.models
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ETicket',
            fields=[
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name="Date d' ajout")),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('active', models.BooleanField(default=True, verbose_name="Désigne si l' instance est active")),
                ('related_order_id', models.CharField(max_length=120)),
                ('name', models.CharField(blank=True, max_length=220)),
                ('secret_key', models.BinaryField(blank=True, editable=True, max_length=256)),
                ('secret_phrase', models.CharField(blank=True, max_length=1024)),
                ('qr_code_data', models.CharField(blank=True, max_length=512)),
                ('expiration_date', models.DateTimeField(blank=True)),
                ('is_downloaded', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'E-ticket',
                'verbose_name_plural': 'E-tickets',
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name="Date d' ajout")),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('active', models.BooleanField(default=True, verbose_name="Désigne si l' instance est active")),
                ('name', models.CharField(max_length=256, verbose_name='Nom')),
                ('description', models.TextField(max_length=512, verbose_name='Description')),
                ('default_price', models.DecimalField(decimal_places=2, default=0, max_digits=9)),
                ('location_name', models.CharField(blank=True, max_length=512, verbose_name='Nom du lieu')),
                ('location_lat', models.FloatField(verbose_name='Latitude du lieu')),
                ('location_long', models.FloatField(verbose_name='Longitude du lieu')),
                ('location', django.contrib.gis.db.models.fields.PointField(null=True, srid=4326, verbose_name="Lieu de l'évènement ")),
                ('hour', models.TimeField(default=datetime.time(0, 0), verbose_name="Heure à laquelle aura lieu l'évènement ")),
                ('date', models.DateField(verbose_name="Date à laquelle aura lieu l'évènement ")),
                ('expiry_date', models.DateTimeField(verbose_name="Date à laquelle l' évènement expire.")),
                ('cover_image', models.ImageField(upload_to=apps.utils.utils.codes.utils._upload_to, verbose_name="Cover officiel de l'évènement")),
                ('views', models.IntegerField(default=0, verbose_name='Nombre de vues')),
                ('participant_count', models.IntegerField(default=0, verbose_name='Nombre de participants')),
                ('dynamic_link', models.CharField(blank=True, max_length=512, verbose_name='Lien dynamique')),
                ('is_tickets_management_enabled', models.BooleanField(default=True, verbose_name='Permission de management de tickets')),
                ('have_passed_validation', models.BooleanField(default=False, verbose_name='A passé la validation')),
                ('valid', models.BooleanField(default=False, verbose_name='Est valide')),
            ],
            options={
                'verbose_name': 'Évènement',
                'verbose_name_plural': 'Évènements',
            },
        ),
        migrations.CreateModel(
            name='EventHighlighting',
            fields=[
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name="Date d' ajout")),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('start_date', models.DateField(auto_now_add=True, verbose_name='Date de début de validité')),
                ('end_date', models.DateField(blank=True, default=datetime.date(2024, 9, 19), verbose_name='Date de fin de validité')),
                ('active_status', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': "Mise en Avant d' évènement",
                'verbose_name_plural': "Mise en Avant d' évènement",
            },
        ),
        migrations.CreateModel(
            name='EventHighlightingType',
            fields=[
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name="Date d' ajout")),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('active', models.BooleanField(default=True, verbose_name="Désigne si l' instance est active")),
                ('name', models.CharField(max_length=150, verbose_name='Nom')),
                ('description', models.TextField(max_length=500, verbose_name='Description')),
                ('price', models.DecimalField(decimal_places=5, default=1000.0, max_digits=15, verbose_name='Prix')),
                ('order', models.IntegerField(default=1, verbose_name='Ordre hiérarchique')),
                ('number_of_days_covered', models.PositiveIntegerField(default=7, verbose_name='Nombre de jours couverts')),
            ],
            options={
                'verbose_name': "Type de Mise en Avant d' évènement",
                'verbose_name_plural': "Types de Mise en Avant d' évènements",
            },
        ),
        migrations.CreateModel(
            name='EventImage',
            fields=[
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name="Date d' ajout")),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('active', models.BooleanField(default=True, verbose_name="Désigne si l' instance est active")),
                ('title', models.CharField(blank=True, max_length=220, null=True)),
                ('image', models.ImageField(upload_to=apps.utils.utils.codes.utils._upload_to)),
                ('thumbnails', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': "Image d'évènement ",
                'verbose_name_plural': "Images d'évènement s",
            },
        ),
        migrations.CreateModel(
            name='EventType',
            fields=[
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name="Date d' ajout")),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('active', models.BooleanField(default=True, verbose_name="Désigne si l' instance est active")),
                ('name', models.CharField(max_length=150, unique=True, verbose_name='Nom')),
                ('description', models.TextField(max_length=500, verbose_name='Description')),
                ('image', models.ImageField(blank=True, upload_to=apps.utils.utils.codes.utils._upload_to, verbose_name="Image du type d'évènement")),
            ],
            options={
                'verbose_name': "Type d'évènement",
                'verbose_name_plural': "Types d'évènement",
            },
        ),
        migrations.CreateModel(
            name='FavouriteEvent',
            fields=[
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name="Date d' ajout")),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('active', models.BooleanField(default=True, verbose_name="Désigne si l' instance est active")),
                ('receive_news_by_email', models.BooleanField(default=True, verbose_name='Être informé par email')),
            ],
            options={
                'verbose_name': 'Favoris',
                'verbose_name_plural': 'Favoris',
            },
        ),
        migrations.CreateModel(
            name='FavouriteEventType',
            fields=[
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name="Date d' ajout")),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('active', models.BooleanField(default=True, verbose_name="Désigne si l' instance est active")),
            ],
            options={
                'verbose_name': 'Favoris',
                'verbose_name_plural': 'Favoris',
            },
        ),
        migrations.CreateModel(
            name='HistoricalEvent',
            fields=[
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('timestamp', models.DateTimeField(blank=True, editable=False, verbose_name="Date d' ajout")),
                ('updated', models.DateTimeField(blank=True, editable=False, verbose_name='Date de modification')),
                ('active', models.BooleanField(default=True, verbose_name="Désigne si l' instance est active")),
                ('name', models.CharField(max_length=256, verbose_name='Nom')),
                ('description', models.TextField(max_length=512, verbose_name='Description')),
                ('default_price', models.DecimalField(decimal_places=2, default=0, max_digits=9)),
                ('location_name', models.CharField(blank=True, max_length=512, verbose_name='Nom du lieu')),
                ('location_lat', models.FloatField(verbose_name='Latitude du lieu')),
                ('location_long', models.FloatField(verbose_name='Longitude du lieu')),
                ('location', django.contrib.gis.db.models.fields.PointField(null=True, srid=4326, verbose_name="Lieu de l'évènement ")),
                ('hour', models.TimeField(default=datetime.time(0, 0), verbose_name="Heure à laquelle aura lieu l'évènement ")),
                ('date', models.DateField(verbose_name="Date à laquelle aura lieu l'évènement ")),
                ('expiry_date', models.DateTimeField(verbose_name="Date à laquelle l' évènement expire.")),
                ('cover_image', models.TextField(max_length=100, verbose_name="Cover officiel de l'évènement")),
                ('views', models.IntegerField(default=0, verbose_name='Nombre de vues')),
                ('participant_count', models.IntegerField(default=0, verbose_name='Nombre de participants')),
                ('dynamic_link', models.CharField(blank=True, max_length=512, verbose_name='Lien dynamique')),
                ('is_tickets_management_enabled', models.BooleanField(default=True, verbose_name='Permission de management de tickets')),
                ('have_passed_validation', models.BooleanField(default=False, verbose_name='A passé la validation')),
                ('valid', models.BooleanField(default=False, verbose_name='Est valide')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical Évènement',
                'verbose_name_plural': 'historical Évènements',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name="Date d' ajout")),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('active', models.BooleanField(default=True, verbose_name="Désigne si l' instance est active")),
                ('name', models.CharField(blank=True, max_length=30, verbose_name='Nom Complet')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Adresse mail')),
                ('sex', models.CharField(blank=True, choices=[('F', 'Féminin'), ('M', 'Masculin'), ('A', 'Autres')], max_length=10, null=True, verbose_name='Sexe')),
                ('phone', models.CharField(blank=True, max_length=25, null=True, validators=[apps.utils.validators.PhoneNumberValidator()], verbose_name='Numéro de téléphone')),
                ('order_id', models.CharField(max_length=120, unique=True)),
                ('status', models.CharField(choices=[('SUBMITTED', 'SUBMITTED'), ('STARTED', 'STARTED'), ('FINISHED', 'FINISHED')], default='SUBMITTED', max_length=120)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('is_income_distributed', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Commande de ticket',
                'verbose_name_plural': 'Commandes de Tickets',
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name="Date d' ajout")),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('active', models.BooleanField(default=True, verbose_name="Désigne si l' instance est active")),
                ('quantity', models.IntegerField(default=1)),
                ('line_total', models.DecimalField(decimal_places=2, max_digits=12)),
            ],
            options={
                'verbose_name': "Item d' une commande",
                'verbose_name_plural': 'Items de commandes',
            },
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name="Date d' ajout")),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('active', models.BooleanField(default=True, verbose_name="Désigne si l' instance est active")),
                ('name', models.CharField(max_length=150, verbose_name='Nom')),
                ('description', models.TextField(blank=True, max_length=500, null=True, verbose_name='Description')),
                ('price', models.DecimalField(decimal_places=2, max_digits=9)),
                ('expiry_date', models.DateTimeField(default=datetime.datetime(2024, 9, 13, 0, 25, 57, 197963), verbose_name='Date de fin de validité')),
                ('available_quantity', models.IntegerField(default=-1, verbose_name='Nombre de ticket restant')),
                ('initial_quantity', models.IntegerField(default=100, verbose_name='Nombre de ticket valide disponible initialement')),
            ],
            options={
                'verbose_name': 'Ticket',
                'verbose_name_plural': 'Tickets',
            },
        ),
        migrations.CreateModel(
            name='TicketCategory',
            fields=[
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name="Date d' ajout")),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('active', models.BooleanField(default=True, verbose_name="Désigne si l' instance est active")),
                ('name', models.CharField(max_length=150, verbose_name='Nom')),
                ('description', models.TextField(max_length=500, verbose_name='Description')),
            ],
            options={
                'verbose_name': 'Catégorie de Ticket',
                'verbose_name_plural': 'Catégories de Ticket',
            },
        ),
        migrations.CreateModel(
            name='TicketCategoryFeature',
            fields=[
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name="Date d' ajout")),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('active', models.BooleanField(default=True, verbose_name="Désigne si l' instance est active")),
                ('description', models.TextField(blank=True, max_length=150, verbose_name='Description')),
            ],
            options={
                'verbose_name': "Attribut d' un Ticket",
                'verbose_name_plural': "Attributs d' un Ticket",
            },
        ),
    ]
