
services:
  nginx:
    image: nginx:latest
    ports:
      - 80:80
      - 443:443
    container_name: wuloevents-nginx-container-prod
    restart: on-failure
    env_file:
      - .env.nginx
    volumes:
      # - nginx_secrets:/etc/letsencrypt
      # - ./.docker/nginx/user_conf.d:/etc/nginx/user_conf.d
      - medias_volume:/usr/src/app/static/medias
      - static_volume:/usr/src/app/static/staticfiles

      # New configs
      - ./.docker/nginx/user_conf.d/:/etc/nginx/conf.d/:ro
      - ./.docker/certbot/www/:/var/www/certbot/:ro
    depends_on:
      - backend
  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./.docker/certbot/www/:/var/www/certbot/:rw
      - ./.docker/certbot/conf/:/etc/letsencrypt/:rw

  db:
    image: postgis/postgis:15-3.4-alpine
    container_name: wuloevents-db-container-prod
    env_file: .env.db
    ports:
      - "5434:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
  backend:
    build: ./
    container_name: wuloevents-backend-container-prod
    restart: always
    command: >
      sh -c "python manage.py migrate --no-input && python manage.py sync_admin_available_permissions  &&
            gunicorn backend.wsgi:application --workers 1 --bind 0.0.0.0:8000 --timeout 700 --log-level debug"
    env_file: .env
    volumes:
      - db_backup_volume:/usr/src/app/data/
      - static_volume:/usr/src/app/static/staticfiles
      - medias_volume:/usr/src/app/static/medias
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis

  redis:
    container_name: wuloevents-redis-container-prod
    image: redis:6-alpine

  celery:
    build: .
    image: wuloevents-celery
    container_name: wuloevents-celery-container-prod
    restart: always
    command: celery worker --app=backend --loglevel=debug
    volumes:
      - static_volume:/usr/src/app/static/staticfiles
      - medias_volume:/usr/src/app/static/medias
    depends_on:
      - backend

  celery-beat:
    build: .
    image: wuloevents-celery-beat
    restart: always
    command: celery beat --app=backend --loglevel=debug --pidfile=
    volumes:
      - static_volume:/usr/src/app/static/staticfiles
      - medias_volume:/usr/src/app/static/medias
    depends_on:
      - redis

volumes:
  db_data:
  static_volume:
  medias_volume:
  db_backup_volume:
  nginx_secrets:
