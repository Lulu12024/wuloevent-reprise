# -*- coding: utf-8 -*-
"""
Created on April 26, 2022

@author:
    Wesley Eliel MONTCHO, alias DevBackend7
"""

"""
Django settings for backend project.

Generated by 'django-admin startproject' using Django 4.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

import os
from pathlib import Path

from celery.schedules import crontab
from dotenv import load_dotenv, find_dotenv

# set_level("INFO")
load_dotenv(find_dotenv())

APP_ID = "Logs"

# GEOS_LIBRARY_PATH = '/usr/lib/libgdal.so.31.0.0'
# GDAL_LIBRARY_PATH = '/usr/lib/libgeos_c.so.1.16.0'


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!

SECRET_KEY = os.environ.get("SECRET_KEY")

# Application definition

# 'drf_yasg',
# 'django_prometheus',
# 'debug_toolbar',
# 'drf_api_logger',

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django.contrib.gis",
    "storages",
    "channels",
    "corsheaders",
    "drf_yasg",
    "leaflet",
    "django_filters",
    "rest_framework",
    "rest_framework_gis",
    "rest_framework_simplejwt.token_blacklist",
    "drf_standardized_errors",
    "drf_spectacular",
    "drf_api_logger",
    "simple_history",
    # "silk",
    "apps.events",
    "apps.marketing",
    "apps.notifications",
    "apps.organizations",
    "apps.searches",
    "apps.users",
    "apps.utils",
    "apps.news",
    "apps.chat_rooms",
]

# 'backend.middlewares.loggers.RequestLogMiddleware',
# "debug_toolbar.middleware.DebugToolbarMiddleware",

MIDDLEWARE = [
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "backend.middlewares.common.TrailingSlashMiddleware",
    # "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    # 'silk.middleware.SilkyMiddleware',
    "drf_api_logger.middleware.api_logger_middleware.APILoggerMiddleware",
    "backend.middlewares.timezone.TimezoneMiddleware",
    "apps.organizations.middlewares.OrganizationAuthentication",
    "simple_history.middleware.HistoryRequestMiddleware",
]

ROOT_URLCONF = "backend.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
            "libraries": {
                "staticfiles": "django.templatetags.static",
            },
        },
    },
]

WSGI_APPLICATION = "backend.wsgi.application"
ASGI_APPLICATION = "backend.asgi.application"

# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

# REST FRAMEWORK Settings
REST_FRAMEWORK = {
    "DEFAULT_PERMISSION_CLASSES": [
        "rest_framework.permissions.IsAuthenticated",
    ],
    "DEFAULT_AUTHENTICATION_CLASSES": [
        "rest_framework_simplejwt.authentication.JWTAuthentication",
    ],
    "DEFAULT_SCHEMA_CLASS": "apps.docs.CustomAutoSchema",
    "EXCEPTION_HANDLER": "drf_standardized_errors.handler.exception_handler",
    "DEFAULT_THROTTLE_CLASSES": [
        "rest_framework.throttling.AnonRateThrottle",
        "rest_framework.throttling.UserRateThrottle",
    ],
    "DEFAULT_THROTTLE_RATES": {
        "anon": "40/minute",
        "user": "50/minute",
    },
}

# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = "fr-FR"

TIME_ZONE = "Africa/Porto-Novo"

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/
# STATICFILES_DIRS = (os.path.join(BASE_DIR, 'statics'))

STATIC_URL = "/statics/"
STATIC_ROOT = os.path.join(BASE_DIR, "statics")

MEDIA_URL = "/medias/"
MEDIA_ROOT = os.path.join(BASE_DIR, "medias")

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

AUTH_USER_MODEL = "users.User"

CORS_ALLOW_ALL_ORIGINS = True

# DRF API Logger

DRF_LOGGER_QUEUE_MAX_SIZE = 30
DRF_API_LOGGER_DATABASE = True
DRF_LOGGER_INTERVAL = 10

# Todo: Specially target DB logging queries, if other logging types added
ENABLE_DB_QUERIES_LOGGING = bool(int(os.environ.get("ENABLE_DB_QUERIES_LOGGING", "0")))
if ENABLE_DB_QUERIES_LOGGING:
    LOGGING = {
        "version": 1,
        "disable_existing_loggers": False,
        "formatters": {
            "sql": {
                "()": "backend.loggers.SqlFormatter",
            },
        },
        "handlers": {
            "console": {
                "level": "DEBUG",
                "class": "logging.StreamHandler",
                "formatter": "sql",
            },
        },
        "loggers": {
            "django.db.backends": {
                "handlers": ["console"],
                "level": "DEBUG",
            }
        },
    }

LEAFLET_CONFIG = {
    "DEFAULT_CENTER": (13.3888599, 52.5170365),  # set your corordinate
    "DEFAULT_ZOOM": 16,
    "MIN_ZOOM": 3,
    "MAX_ZOOM": 20,
    "DEFAULT_PRECISION": 6,
    "SCALE": "both",
    "ATTRIBUTION_PREFIX": "Powered by Wesley Eliel alias DevBackend7",
}

SPATIALITE_LIBRARY_PATH = "mod_spatialite"

SPECTACULAR_SETTINGS = {
    "TITLE": "Wulo Event API",
    "DESCRIPTION": "Your project description",
    "VERSION": "1.0.0",
    "SERVE_PERMISSIONS": ["rest_framework.permissions.AllowAny"],
    "SERVERS": [
        {"url": "https://api.wuloevents.com/", "description": "Production API"},
    ],
    "POSTPROCESSING_HOOKS": [
        "drf_standardized_errors.openapi_hooks.postprocess_schema_enums"
    ],
}

CELERY_BEAT_SCHEDULE = {
    "backup_db": {
        "task": "apps.utils.tasks.db_tasks.backup_db",
        "schedule": crontab(minute=0, hour="*/6"),
    },
    "notifications_about_approach_of_favourite_event": {
        "task": "apps.notifications.tasks.notifications_tasks.notify_users_about_the_approach_of_favourite_event",
        "schedule": crontab(minute=0, hour="*/1"),
    },
    "update_subscriptions_active_status": {
        "task": "apps.organizations.tasks.subscriptions_tasks.update_subscriptions_active_status",
        "schedule": crontab(minute=0, hour="*/1"),
    },
}

APPEND_SLASH = True

# sentry_sdk.init(
#     dsn=os.environ['SENTRY_DNS'],
#     integrations=[DjangoIntegration()],
#
#     # Set traces_sample_rate to 1.0 to capture 100%
#     # of transactions for performance monitoring.
#     # We recommend adjusting this value in production,
#     traces_sample_rate=1.0,
#
#     # If you wish to associate users to errors (assuming you are using
#     # django.contrib.auth) you may enable sending PII data.
#     send_default_pii=True,
#
#     # By default the SDK will try to use the SENTRY_RELEASE
#     # environment variable, or infer a git commit
#     # SHA as release, however you may want to set
#     # something more human-readable.
#     # release="myapp@1.0.0",
# )
# sentry_sdk.set_level('INFO')
